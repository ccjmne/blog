$codefont: "Fira Code", monospace;

strong { font-weight: 600; }
ol { list-style-type: lower-roman; }
ul { list-style-type: square; }
ol, ul { box-sizing: border-box; }

body {
  font-family: "Work Sans", serif;
  font-optical-sizing: auto;
  color: var(--colour-text);
}

h1, h2, h3, h4, h5, h6 { font-family: "Outfit", sans-serif; }
h1, h2 { font-weight: 500; }
h3, h4, h5, h6 { font-weight: 400; }
h1 { margin: 3rem 0; }
h2, h3 { margin: 1.75rem 0; }

@media (max-width: 600px) {
  h1 { font-size: 1.5rem; }
  h2 { font-size: 1.3rem; }
  h3 { font-size: 1.15rem; }
  body { font-size: calc(1rem - 1px); }
}

ol.breadcrumbs {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  padding: 0;
  li:not(:last-child)::after {
    content: "/";
    margin: 0 .5ch;
    color: var(--colour-subtext0);
  }
}

a {
  text-decoration: underline;
  text-underline-offset: 3px;
  text-decoration-thickness: 1px;

  &, &:visited {
    color: var(--colour-text);
    text-decoration-color: var(--colour-accent);
  }

  &:hover, &:active {
    color: var(--colour-accent);
  }

  &[href^=git],&[href^=http]:not([href^='https://ccjmne.sh/'],[href^='https://ccjmne.github.io/'],[href^='http://localhost'],[href^='http://127.0.0.1'],:has(img)) {
    &::after {
      content: "\202Fâ†—"; // U+202F is NARROW NO-BREAK SPACE
      font-size: 0.75em;
      font-family: $codefont;
    }
  }

  &[href^="#fr-"] { // backlink to footnote-reference
    font-size: .75em;
  }

  &.anchor-link {
    margin-right: .5ch;
    font-family: "Noto Sans Symbols";
    font-weight: normal;
    color: var(--colour-accent);
    text-decoration: none;
  }
}

abbr {
  display: inline-block;
  position: relative;
  cursor: help;
  text-decoration: none;
  text-decoration: underline wavy;
  text-decoration-color: var(--colour-accent);
  isolation: isolate;

  &::after {
    content: attr(title);
    position: absolute;
    width: max-content;
    left: 50%;
    top: -2rem;
    transform: translateX(-50%);
    padding: 0 .5rem;
    background-color: var(--colour-base);
    border: 1px solid var(--colour-overlay0);
    pointer-events: none;
    opacity: 0;
  }

  &:hover::after {
    opacity: 1;
  }
}

$quote:      (color: var(--colour-text),  text: "quote",     icon: "book");
$admonitions: (
  note:      (color: var(--colour-text),  text: "note",      icon: "info"),
  tip:       (color: var(--colour-teal),  text: "tip",       icon: "light-bulb"),
  important: (color: var(--colour-mauve), text: "important", icon: "report"),
  warning:   (color: var(--colour-peach), text: "warning",   icon: "alert"),
  caution:   (color: var(--colour-red),   text: "caution",   icon: "stop"),
);

blockquote {
  position: relative;
  border-inline-start: .75ch solid;
  padding-inline-start: 1.5ch;
  box-sizing: border-box;
  margin-inline: 0;

  > p:first-of-type { margin-top: .5em; }

  &::before {
    font-weight: 600;
    padding-inline-start: calc(16px + .5em);
    text-transform: capitalize;
  }

  &::after {
    content: '';
    position: absolute;
    top: 2px;
    height: 16px;
    width: 16px;
    font-weight: 600;
  }

  @mixin admonition($props) {
    border-inline-start-color: map-get($props, color);
    &::before {
      content: map-get($props, text);
      color: map-get($props, color);
    }
    &::after {
      mask: url('../octicons/#{map-get($props, icon)}-16.svg');
      background-color: map-get($props, color);
    }
  }

  @each $name, $props in $admonitions {
    &.markdown-alert-#{$name} {
      @include admonition($props);
    }
  }

  &:not([class*="markdown-alert-"]) {
    @include admonition($quote);
    > * { font-style: italic; }
  }
}
